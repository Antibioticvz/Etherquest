import React from 'react';

import buyActions from './type';


const initialState = {
	owner: 'me',
	id: '23232323',
	tags: ['Tag', 'Atag2', 'taggg'],

	created: Date.now(),

	origins: '',
	derivations: '',

	// Breed
	breed: true,

	//Sell
	sell: true,
	difficul: '',
	auction: false,
	price: '1.2',
	time: '23h',

	runes: 'l(10)5(10)56',

	rarity: 'legendary',
// Dont need it. Can be generated by const card = runesToBuy(this.props.runes)
	// Like here /src/components/card/index.js
	// Need to test it and see if its better to do it from here
	// maybe the same =)
	attack: 2,
	attackType: "melee",
	color: "dark",
	defense: 3,
	hp: 1,
	mana: 10,
	name: "Buy name",
	text: "Protection from magic damage. As an additional casting cost, remove 4 HP from target creature you control.",
	type: "creature",

};


const reducer = (state = initialState, action) => {
	switch (action.type) {

		case buyActions.BUY_INIT_STATE:
			return {
				...initialState,
			};

		case buyActions.SET_BUY_PROPS:
			return {
				...action.payload,
			};

		case buyActions.ON_CHANGE_BUY:
			return {
				...state,
				[action.payload.field]: action.payload.value,
			};
		default:
			return state;
	}
};

export default reducer;

